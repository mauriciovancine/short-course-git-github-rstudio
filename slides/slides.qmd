---
title: "Controle de versão com git, GitHub e RStudio"
subtitle: "<br> leb.exe - Unicamp"
author: "[Maurício Vancine](https://mauriciovancine.github.io/)
<br>
Matheus Moroti"
date: "03/11/2025"
date-format: long
format: 
  revealjs:
    theme: [custom.scss]
    slide-number: c/t
    show-slide-number: all
    hash-type: number
    preview-links: false
    chalkboard: true
    logo: "https://git-scm.com/images/logos/downloads/Git-Logo-1788C.png"
    execute:
      echo: true
      eval: true
      warning: false
      message: false
editor: source
lang: pt
---

## Maurício Vancine 

::: columns
::: {.column width="50%"}
<center>
<br>
![](img/avatar_mhv.png)
</center>
:::

::: {.column width="50%"}
::: {style="font-size: 80%;"}
<br>

- Ecólogo e Doutor em Ecologia
- Pós-Doutorado em Ecologia Espacial
- Ecologia Espacial
- Modelagem Ecológica
- Análise de Dados Ecológicos e Espaciais
- Ecologia e Conservação de Anfíbios
- *Open source* (R, QGIS, GNU/Linux)
:::
:::
:::

## Matheus Moroti

::: columns
::: {.column width="50%"}
<center>
<br>
![](img/avatar.png)
</center>
:::

::: {.column width="50%"}
::: {style="font-size: 80%;"}
<br>

- Ecólogo e Doutor em Ecologia
- Pós-Doutorado em Ecologia Espacial
- Ecologia Espacial
- Modelagem Ecológica
- Análise de Dados Ecológicos e Espaciais
- Ecologia e Conservação de Anfíbios
- *Open source* (R, QGIS, GNU/Linux)
:::
:::
:::

## Workshop

::: {.incremental}
- Carga horária bem enxuta: 06 h

- Parte teórica: 03 h (manhã)

- Parte prática: 03 h (tarde)

- Nosso principal **objetivo** é **introduzir** o tema de reprodutibilidade e controle de versão

- Vamos indicar muito **material** para estudo

- Cursos são ótimo para **"quebrar o gelo"**, mas o aprendizado depende de vocês

:::

## Conteúdo{.smaller}

::: columns
::: {.column width="50%"}
::: nonincremental
1. Princípio FAIR (*Findable*, *Accessible*, *Interoperable*, *Reusable*)
2. Conferindo os computadores
3. Ambiente virtual (*renv*)
4. Controle de versão
5. git e GitHub 
6. Detalhes do GitHub
7. Funcionamento do controle de versão
8. GitHub: Fork
9. Configuração: `git config`
10. Iniciando localmente: `git init`
11. Iniciando remotamente: `git clone`
:::
:::

::: {.column width="50%"}
::: nonincremental
12. Versionamento: `git add`, `git commit` e `git status`
13. Ignorando: `.gitignore`
14. Histórico: `git log` e `git show`
15. Diferenças: `git diff`
16. Desfazer: `git revert` e `git reset`  
17. Ramificações: `git branch`, `git switch` e `git merge`
18. Remoto: `git remote`, `git push` e `git pull`
19. GitHub: Pull request
20. Interface gráfica do RStudio  
:::
:::

:::

# 1. Princípio FAIR 

## 1. Princípio FAIR 

- *Findable*, *Accessible*, *Interoperable*, *Reusable*

# 2. Conferindo os computadores

# 
![](img/general_hard_soft.png){fig-align='center'}

## 2. Conferindo os computadores

<br>
**R (>4.4.x)**  
[https://www.r-project.org/](https://www.r-project.org/)

<br>

**RStudio (>2024.12.x)**  
[https://www.rstudio.com/](https://www.rstudio.com/)

<br>

**git (>2.48.x)**  
[https://git-scm.com/](https://git-scm.com/)

# 3. Ambiente virtual (*renv*)

## 3. Ambiente virtual (*renv*)


# 4. Controle de versão

# 
![](img/git_work.png){fig-align='center'}


## 4. Controle de versão

Quem nunca...

![](img/git_file_version.png){fig-align='center'}

## 4. Controle de versão

Manejar projetos **individualmente**

<br><br>
![](img/git_one_brantch.png){.absolute width=80% right=100 top=250}

## 4. Controle de versão

Manejar projetos **compartilhados**

![](img/git_multi_brantch.png){.absolute width=90% right=50 top=200}

## 4. Controle de versão

Manejar projetos **no tempo**

![](img/git_time.png){fig-align='center'}

## 4. Controle de versão

Principal **ferramenta** utilizada em grandes projetos

![](img/git_article.png){.absolute width=50% right=520 top=150}
![](img/git_article_fig.png){.absolute width=60% right=-150 top=150}
![](img/git_article_table.png){.absolute width=50% right=520 top=400}

:::footer
[Perez-Riverol et al. (2016)](https://doi.org/10.1371/journal.pcbi.1004947)
:::

# 5. git e GitHub

## 5. git e GitHub

**git**

- Software (app) que faz o **controle de versão**
- Maneja os **repositórios locais** (computador) e **remotos** (e.g. GitHub)

![](img/git_logo.png){.absolute width=60% right=200 top=370}

:::footer
[git](https://git-scm.com/)
:::

## 5. git e GitHub

**git**

- Criado por **Linus Torvalds** em 2005 para substituir o BitKeeper SCM no gerenciamento do Kernel Linux
-  Software livre, distribuído sob a licença GNU GPL v.2

![](img/general_linus.jpg){.absolute width=50% right=480 top=350}
![](img/general_tux.png){.absolute width=40% right=0 top=320}

:::footer
[kernel](https://www.kernel.org/)
:::

## 5. git e GitHub

**git**

<p align="center">
<iframe width="80%" height="480" align="center" src="https://www.youtube.com/embed/6Czd1Yetaac" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
</iframe>
</p>

## 5. git e GitHub

**GitHub**

- Repositórios remotos  
- **Plataformas de hospedagem** de códigos com controle de versão

![](img/github_logo2.png){.absolute width=50% right=600 top=350}
![](img/gitlab_logo.png){.absolute width=28% right=350 top=350}
![](img/bitbucket.webp){.absolute width=28% right=0 top=350}

:::footer
[GitHub](https://www.kernel.org/), [GitLab](https://www.kernel.org/), [Bitbucket](https://bitbucket.org/)
:::

## 5. git e GitHub

**ATENÇÃO: dois conceitos!**  

- **git**: software (app) que faz o controle de versão
- **GitHub**: plataforma para hospedar arquivos versionados

![](img/git_github_diff.png){.absolute width=75% right=150 top=300}

## 5. git e GitHub

**ATENÇÃO: dois conceitos!**  

- **git**: software (app) que faz o controle de versão
- **GitHub**: plataforma para hospedar arquivos versionados

![](img/git_github_link.png){.absolute width=75% right=150 top=300}

## Vamos criar uma conta no **GitHub**  

![](img/github_logo.png){.absolute width=55% right=220 top=130}

:::footer
[GitHub](https://github.com)
:::

---

# Tudo bem até aqui?

---

# 4. Funcionamento do controle de versão

---

## Duas formas de trabalhar:  
1. Localmente (com `git`)  
2. A partir de um repositório remoto (`GitHub`)

---

# 5. GitHub: Fork

## Material

Todo o material está disponível no [GitHub](https://github.com/mauriciovancine/workshop-qgis)

<center>
<img src="img/github.png" style="width:50%"/>
</center>

:::footer
[GitHub](https://github.com/mauriciovancine/workshop-qgis)
:::

## Conferindo os computadores

<center>
<img src="img/general_hard_soft_bg.png" style="width:80%"/>
</center>

:::footer
[Café com Código](https://www.instagram.com/cafecomcodigo/?hl=pt)
:::

## IMPORTANTE!!!

**Estamos num espaço seguro e amigável**

- Sintam-se à vontade para me interromper e tirar dúvidas

<center>
<img src="img/general_starwars_teamwork.png" style="width:50%"/>
</center>



# Dúvidas?

# Material de estudo

## Livros

- [ggplot2 (2016)](https://ggplot2.tidyverse.org/)

- [R Graphics Cookbook (2018)](http://www.cookbook-r.com/Graphs/)

- [R for Data Science (2017)](https://r4ds.had.co.nz/)

- [Data Visualization with R (2018)](https://rkabacoff.github.io/datavis/)

- [Fundamentals of Data Visualization (2019)](https://serialmentor.com/dataviz/)

- [Interactive web-based data visualization with R, plotly, and shiny (2019)](https://plotly-r.com/)

## Sites

- [ggplot2: Reference](https://ggplot2.tidyverse.org/reference/)

- [R Graph Gallery](https://www.r-graph-gallery.com/)

- [from Data to Viz](https://www.data-to-viz.com/)

- [The Data Visualisation Catalogue](https://datavizcatalogue.com/index.html)

- [plotly](https://plotly.com)

- [Statistical tools for high-throughput data analysis (STHDA)](http://www.sthda.com/english/)

## Muito obrigado!

::: columns
::: {.column width="50%"}
Agradecimentos:

- [Prof. Miltinho](https://leec.eco.br/)

:::

::: {.column width="50%"}
Contato:

<center>
[`r icons::icon_style(icons::fontawesome("link"), fill = "#ff453c")`](https://mauriciovancine.github.io/)
[`r icons::icon_style(icons::fontawesome("envelope", style = "solid"), fill = "#ff453c")`](mailto:mauricio.vancine@gmail.com)
[`r icons::icon_style(icons::fontawesome("twitter"), fill = "#ff453c")`](https://twitter.com/mauriciovancine)
[`r icons::icon_style(icons::fontawesome("github"), fill = "#ff453c")`](https://github.com/mauriciovancine)

<img src="img/gif_frogs.gif" style="width:80%"/>
</center>

:::
:::

:::footer
Slides por [Maurício Vancine](https://mauriciovancine.github.io/), feitos com [Quarto](https://quarto.org/). Código disponível no [GitHub](https://github.com/mauriciovancine/workshop-qgis/blob/master/01_slides/slides.qmd).
:::
